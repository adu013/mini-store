version: '3.9'

services:
  django:
    build: ./app
    command: >
      /bin/sh -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - minio
      - create_buckets

  celery:
    build: ./app
    command: celery -A mini_project worker -l INFO
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - django
      - redis

  redis:
    image: "redis:alpine"

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=mini_project_user
      - POSTGRES_PASSWORD=mini_project_pwd
      - POSTGRES_DB=mini_project_db


  minio:
    image: minio/minio:latest
    hostname: "minio"
    volumes:
        - data:/data
    ports:
       - "9000:9000"
       - "9001:9001"
    environment:
      - "MINIO_ROOT_USER=user"
      - "MINIO_ROOT_PASSWORD=password"
    command: 'minio server /data --console-address ":9001"'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  create_buckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 user password;
      /usr/bin/mc mb s3/static/;
      /usr/bin/mc anonymous set download s3/static;
      "

  frontend:
    restart: always
    command: npm start
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - django
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data:
  data:
